Day01

一、KVM简介

虚拟化：
红帽:KVM、RHEV
VMware:workstation、vSphere
微软:VPC
Oracle:virtualBox
Citrix:Xen
ISP英特网服务提供商

需开启BIOS支持虚拟化管理

安装虚拟化服务器的平台
KVM/QEMU/LIBVIRTD
 -KVM是linux内核的模块，它需要CPU的支持，采用硬件辅助虚拟化技术Intel-VT，AMD-V，内存的相关如Intel的EPT和AMD的RVI技术
 -QEMU是一个虚拟化的仿真工具，通过ioctl与内核kvm交互完成对硬件的虚拟化支持
 -Libvirt是一个对虚拟化管理的接口和工具，提供用户端程序virsh，virt-install，virt-manager，virt-view与用户交互
必备软件
 -qemu-kvm:为kvm提供底层仿真支持
 -libvirt-daemon：libvirtd守护进程，管理虚拟机
 -libvirt-client：用户端软件，提供客户端管理命令
 -libvirt-daemon-driver-qemu：libvirtd连接qemu的驱动
可选功能
 -virt-install	//系统安装工具
 -virt-manager	//图形管理工具
 -virt-v2v	//虚拟机迁移工具
 -virt-p2v	//物理及迁移工具
 
KVM虚拟机的组成
虚拟机的组成
 -内核虚拟化模块(KVM)
 -系统设备仿真(QEMU)
 -虚拟机管理程序(LIBVIRT)
 
 -一个XML文件(虚拟机配置声明文件)
 -位置/etc/libvirt/qemu
 -一个磁盘镜像文件(虚拟机的硬盘)
 -位置/var/lib/libvirt/images/
 
管理KVM平台
virsh命令工具
1.查看KVM节点(服务器)信息
 -virsh nodeinfo
2.列出虚拟机
 -virsh list
3.列出所有虚拟机,常用
 -virsh list --al
4.列出虚拟网络
 -virsh net-list [--all]
5.查看指定虚拟机
 -virsh dominfo 虚拟机名
6.启动/重起/关闭指定虚拟机，常用
 -virsh start/reboot/shutdown 虚拟机名
7.强制关闭指定的虚拟机
 -virsh destroy 虚拟机名
8.设置开机自启
 -virsh autostart 虚拟机名
9.取消开机自启
 -virsh autostart --disable 虚拟机名
10.取消定义的虚拟机(删除xml文件)
 -virsh undefine 虚拟机名
virsh	//进入virsh使用help查看命令帮助
ctrl+n //脚本中可以补全用过的单词

 yum grouplist	//查看可以安装组的软件包
 yum groupinstall 包名	//安装一组软件包
 
虚拟化中，称呼物理主机为Host，虚拟主机为Guest
虚拟机的硬盘：
1.虚拟机硬盘，在物理机上值是一个文件
2.磁盘文件格式可以是RAW，也可以是QCOW2
3.RAW采用预分配空间方式，虚拟机磁盘20G，物理机就会产生20G的文件，所以效率高，占用空间大，不支持压缩、后端盘复用、快照
4.QCOW2采用延迟分配方式，开始磁盘文件在物理机上很小，后续会自动增长，效率低，占用空间小，支持压缩、后端盘复用(克隆，后端有一台模版机，在它基础上进行克隆)、快照
5.虚拟机磁盘目录/var/lib/libvirt/images/
 -ls -llh /var/lib/libvirt/images/.rh7_template.img
6.查看模版盘(后端盘)信息
 -qemu-img info .rh7_template.img
7.基于后端盘克隆新的虚拟机
(1)创建前端盘
 qemu-img create -f(文件类型) qcow2 -b(后端盘) .rh7_template.img 新虚拟机名
(2)查看前端盘信息
 qemu-img info 新虚拟机名
(3)利用新建的前端盘生成虚拟机
 virt-manager-->导入现有磁盘镜像
8.qemu-img命令
 支持的磁盘格式：raw，qcow2,vdi,vmdk等
 命令格式：qemu-img 命令 参数 块文件名称 大小
 常用命令有：
  -create  //创建一个磁盘
  -convert //转换磁盘格式
  -info    //查看磁盘信息
  -snapshot //管理磁盘快照
 常用参数：
  - -f 格式	//定义文件格式
  - -b 磁盘文件  //使用后端模版文件

COW技术原理
Copy On Write，写时复制
 -直接映射原始盘的数据内容
 -当原始盘的旧数据有修改时，在修改之前将旧数据存入前端盘
 -对前端盘的修改不回写到原始盘

二、Virsh管理
1.进入管理命令界面
 -virsh
2.连接远程虚拟主机
 -connect qemu+ssh://user@ip:port/system
3.通过virt-manage连接远程虚拟机
 -yum -y install openssh-askpass
 -virt-manager --> 文件 --> 添加连接

虚拟网络管理
1.图形界面
 virt-manager --> 编辑 --> 连接详情 --> 虚拟网络
2.激活默认网络default
 修改自动启动为：引导时，需启动防火墙
(1) default网络默认开启nat功能，连接该网络上的虚拟机可以接入互联网
 (2) 物理主机使用virbr0这块网卡，连到了default网络
 (3) 虚拟机网卡，如果连接到default网络就可以连接互联网，将网络连接改为default，default默认开启DHCP功能
 (4) 如果虚拟机上有virbr0，down掉它
   ifconfig virbr0 down
   brctl delbr virbr0  //彻底删除virbr0
 (5) 激活虚拟机网卡
   ifup eth0
 
自行创建网络，允许虚拟机通过自己创建的网络访问互联网
1.将default网络的配置文件导出，将其当作模版文件进行修改
 /etc/libvirt/qemu/networks/default.xml 
 virsh net-dumpxml default  > /tmp/default.xml  //导出default网络内容
2.修改配置default.xml
<network>
  <name>vbr</name>       //vbr为虚拟网络的名字
  <bridge name="vbr"/>	//ifconfig看到的名字
  <forward mode="nat"/>  //网络连接模式
  <ip address="192.168.1.254" netmask="255.255.255.0">  //ip为192.168.1.254
    <dhcp>
      <range start="192.168.1.100" end="192.168.1.200"/>  //dhcp范围是100-200
    </dhcp>
  </ip>
</network>
3.利用配置文件生成网络
 virsh net-define /tmp/default.xml
4.激活vbr网络，并设置开机自启
 virsh net-start vbr
 virsh net-autostart vbr
 virsh net-list [--all]  //查看虚拟网络
 virsh net-destroy vbr  //停止虚拟网络
 virsh net-edit vbr  //修改vbr网络配置

通过xml文件克隆虚拟机
1.创建前端盘
 cd /var/lib/libvirt/images/
 qemu-img create -f qcow2 -b .rh7_template.img myrh7_2.img
2.导出现有虚拟机配置文件，作为即将克隆虚拟机的配置文件
 virsh dumpxml 虚拟机名 > /tmp/myvm.xml
3.修改myvm.xml
 第1行：删除id=''
 第2行：修改虚拟机名字
 第3行uuid删除
 第36行左右：把虚拟机磁盘名改为第一步创建的磁盘名
 第73行左右：删除mac地址
 第90行左右：删除<channel type='unix'>...</channel>
4.使用myvm.xml生成新的虚拟机
 virsh define /tmp/myvm.xml
5.启动虚拟机
 virsh start 虚拟机名
 virsh list

三、自定义虚拟机
创建教学环境
(一)创建一个虚拟网络vbr，能够访问互联网
(二)安装模版虚拟机
  1.生成一个qcow2格式的磁盘文件
  2.将系统安装在第一步创建的磁盘文件上
  3.初始化系统(配置yum/firewalld/selinux等o)
(三)通过模版机克隆新的虚拟机
  1.生成一个虚拟机的xml文件
  2.修改xml文件，用于克隆虚拟机
  3.利用改好的xml文件生成新的虚拟机

1.把centos7光盘挂载到/var/ftp/centos7
 yum -y install vsftpd
 systemctl start vsftpd
 systemctl enable vsftpd
 mkdir /var/ftp/centos7
 mount 光盘路径 /mnt
 cp /mnt/* /var/ftp/centos7
 或者自动挂载：光盘文件系统类型iso9660
2.为模版机生成磁盘镜像文件
 cd /var/lib/libvirt/images/
 qemu-img create -f qcow2 cent7.img 2G
3.安装系统到cent7.img
 virt-manager --> 新建虚拟机 --> 网络安装 --> ftp://192.168.1.254/CentOS --> 内存2048，cpu2 --> 选择管理的或其他现有设备 /var/lib/libvirt/images/cent7.img --> 名称，选择网络
4.进入安装向导
语言English -> INSTALLATION DESTINATION => I will configure partitioning => 左上角的Done => 下拉菜单选Standard Partigion => 左下角的+号 => Mount point 填/，下面的capacity添2048，也就是把全部磁盘空间都分配给根分区。=> 点击Done的时候，选择Accept Changes。=> 取消KDUMP功能。
5.初始化系统
(1) 禁用Selinux /etc/selinux/config
(2) 配置yum源
  cd /etc/yum.repos.d/
  mkdir repoback
  mv *.repo repoback
  vi local.repo
    [server]
    name=server
    baseurl=ftp://192.168.1.254/CentOS
    enabled=1
    gpgcheck=0
  ifup eth0
  yum repolist
(3) 删除不必要的软件包
 yum -y remove NetworkManager-* firewalld-* python-firewall
(4) 安装常用的软件包
 yum -y install lftp net-tools vim-enhanced bridge-utils psmisc
(5) 修改网卡默认配置，把个性化信息移除
 vim /etc/sysconfig/network-scripts/ifcfg-eth0
   DEVICE=eth0
   ONBOOT=yes
   IPV6INIT=no
   TYPE=Ethernet
   BOOTPROTO=dhcp
(6) 禁用空路由，防止机器获取169.254.x.x的地址(若客户机选择自动获取地址，又没有服务器分配，就会获得默认的169.254.x.x地址)
 vim /etc/sysconfig/network
   NOZEROCONF=yes
(7) 修改内核参数，作用：网卡一定叫ethX，虚拟机可以支持virsh console访问
 vim /etc/default/grub
   GRUB_CMDLINE_LINUX="biosdevname=0 net.ifnames=0 console=ttyS0 rhgb quiet"  //设置网卡名一定是eth0，允许console方式访问
   GRUB_DISABLE_LINUX_UUID="true"	//禁用使用uuid方式挂载分区
   GRUB_ENABLE_LINUX_LABEL="true"	//启用卷标挂载分区
 grub2-mkconfig -o /boot/grub2/grub.cfg  //
(8) 安装虚拟机磁盘扩展命令，当克隆虚拟机时，指定虚拟机磁盘大小后，虚拟机磁盘可以自动扩容
 yum -y install cloud-utils-growpart  //安装可以自动扩容的软件
 chmod 755 /etc/rc.local  //设置第一次开机自动扩容根目录
 vim /etc/rc.local
 /usr/bin/growpart /dev/vda 1  //根分区扩容
 /usr/sbin/xfs_growfs /
 
 virt-sysprep -d 虚拟机名   //关闭虚拟机后执行信息清理工作
 yum search 命令	//搜索产生命令的包
===================模版机初始化完成========================
如果虚拟机已经关机(或者模版机配置春先故障无法启动),可以通过guestmount在物理机上挂载虚拟机的磁盘
guestmount -a 虚拟机.img磁盘路径 -i 本地目录

安装git
yum install -y git
命令 git clone git://124.207.192.18/nsd1809.git
nsd1809中有xml模版文件

手工克隆虚拟机
1.创建前端盘
  cd /var/lib/libvirt/images
  qemu-img create -f qcow2 -b cent7.img cent7node1.img 100G
2.修改虚拟机的配置文件
  cp /root/nsd1809/node.xml /tmp
  sed -i '/\<name\>/s/node/cent7node1/' /tmp/node.xml
  sed -i '/\<source\>/s/node\.img/cent7node1\.img/' /tmp/node.xml
3.生成虚拟机
  virsh define /tmp/node.xml
  virsh start cent7node1

作业:
1.编写配置网卡IP地址的脚本
#!/bin/bash

read -p "interface:" ifname
read -p "ip address:" ipaddr
read -p "prefix:" prefix
read -p "gateway:" gateway
read -p "dns:" dns

ipfile=/etc/sysconfig/network-scripts/ifcfg-$ifname

cat << !!! > $ipfile
DEVICE=$ifname
ONBOOT=yes
BOOTPROTO=none
IPV6INIT=no
IPADDR=$ipaddr
PREFIX=$prefix
!!!

if [ -n "$gateway" ];then
  sed -i "\$aGATEWAY=$gateway" $ipfile
fi

if [ -n "$dns" ];then
  sed -i "\$aDNS2=$dns" $ipfile
fi

2.编写克隆虚拟机的脚本
#!/bin/bash
read -p "vm number:" NUMBER
COUNT=0
FILE_PATH=/var/lib/libvirt/images

if [ -z "$NUMBER" ];then
  echo "请输入要克隆的数量！"
  exit 1
fi
if [[ ! "$NUMBER" =~ ^[0-9]+$ ]];then
  echo "请输入正确的数字！"
  exit 2
fi

while [ $COUNT -lt $NUMBER ]
do
  let NUM++
  reluse=`virsh list --all | grep cent7_node$NUM`
  if [ -z "$reluse" ];then
  qemu-img create -f qcow2 -b $FILE_PATH/.cent7.img $FILE_PATH/cent7_node$NUM 100G &> /dev/null
  \cp /tmp/.node.xml /tmp/node.xml
  sed -i "s/node/cent7_node$NUM/" /tmp/node.xml
  virsh define /tmp/node.xml &> /dev/null
  echo -e  "created cent7_node$NUM...\t\t\t\t\033[32m[Done]\033[0m"
  let COUNT++
  fi
done


四、虚拟设备管理


########################################################################
Day02

早期：单机跑服务
中期：因为单机性能得到了非常大的提升,如果还是单机跑一个服务,服务器的性能明显太过剩了.所以把很多服务器机中在一起，运行很多虚拟机，每台虚拟机运行一个服务，这就是虚拟化
现在：云计算实现了按需使用、按使用计费。

云计算分类
1、IAAS:公有云、私有云、混合云。基础架构即服务，提供云主机(使用最多的)
2、PAAS:平台即服务，提供中间组件
3、SAAS:软件即服务，通过软件使用云厂商提供的服务，比如百度云盘、杀毒软件

必备知识点
OpenStack是IAAS的解决方案，主要组件有：
Horizon:web管理平台，通过图形界面管理各种服务
Keytone:为其他服务提供集中认证，多种身份认证，如密码认证等
Neutron:网络服务，可以创建网络、交换机、路由器等
Cinder:提供云磁盘，可以快照进行数据备份等
Nova:实现云主机管理的，openstack中虚拟机叫实例，如开关机等
Glance:镜像的管理

安装openstack
一、准备安装环境
1、在物理主机上配置yum源：centos7镜像、OPS10镜像、EXTRA镜像

#!/bin/bash
cd /var/ftp/osp10
for i in *
do
  if [ -d $i ];then
     cat << EOF >> /etc/yum.repos.d/ops10.repo
[$i]
name=$i
baseurl=ftp://192.168.4.254/osp10/$i
enabled=1
gpgcheck=0
EOF
  fi
done
2、DNS暂时不用,使用hosts代替
3、在物理主机上配置NTP服务器
(1)安装
 yum -y install chrony
(2)修改配置文件/etc/chrony.conf
  server ntp1.aliyun.com iburst
  allow 0/0
(3)启动服务
  systemctl start chronyd
  systemctl enable chronyd
二、创建一台虚拟机，用于安装openstack
1、虚拟机内存设置为9216MIB
2、原有的网卡，网络连接改到private1
3、再添加一张网卡，连接到private2，设备型号时virtio
4、配置IP地址
eth0:192.168.4.1/24  192.168.4.254 192.168.4.254
eth1:192.168.2.1/24
 ifdown eth0;ifup eth0;ifdown eth1;ifup eth1
 ping -c 2 192.168.4.254
 ping -c 2 192.168.2.254
5、配置yum源
[local_repo]
name=CentOS-$releasever - Base
baseurl="ftp://192.168.4.254/centos7-1708"
enabled=1
gpgcheck=0

[local_extras]
name=extras
baseurl="ftp://192.168.4.254/rhel7-extras"
enabled=1
gpgcheck=0

[1local_devtools-rpms]
name=devtools-rpms
baseurl="ftp://192.168.4.254/rhel7osp-10/rhel-7-server-openstack-10-devtools-rpms"
enabled=1
gpgcheck=0

[2local_optools-rpms]
name=optools-rpms
baseurl="ftp://192.168.4.254/rhel7osp-10/rhel-7-server-openstack-10-optools-rpms"
enabled=1
gpgcheck=0

[3local_rpms]
name=rpms
baseurl="ftp://192.168.4.254/rhel7osp-10/rhel-7-server-openstack-10-rpms"
enabled=1
gpgcheck=0

[4local_tools-rpms]
name=tools-rpms
baseurl="ftp://192.168.4.254/rhel7osp-10/rhel-7-server-openstack-10-tools-rpms"
enabled=1
gpgcheck=0

[5local_mon-rpms]
name=mon-rpms
baseurl="ftp://192.168.4.254/rhel7osp-10/rhel-7-server-rhceph-2-mon-rpms"
enabled=1
gpgcheck=0

[6local_osd-rpms]
name=osd-rpms
baseurl="ftp://192.168.4.254/rhel7osp-10/rhel-7-server-rhceph-2-osd-rpms"
enabled=1
gpgcheck=0

[7local_rhceph-2-tools-rpms]
name=rhceph-2-tools-rpms
baseurl="ftp://192.168.4.254/rhel7osp-10/rhel-7-server-rhceph-2-tools-rpms"
enabled=1
gpgcheck=0

[8local_agent-rpms]
name=agent-rpms
baseurl="ftp://192.168.4.254/rhel7osp-10/rhel-7-server-rhscon-2-agent-rpms"
enabled=1
gpgcheck=0

[9local_installer-rpms]
name=installer-rpms
baseurl="ftp://192.168.4.254/rhel7osp-10/rhel-7-server-rhscon-2-installer-rpms"
enabled=1
gpgcheck=0

[10local_rhscon-2-main-rpms]
name=rhscon-2-main-rpms
baseurl="ftp://192.168.4.254/rhel7osp-10/rhel-7-server-rhscon-2-main-rpms"
enabled=1
gpgcheck=0
6、配置名称解析
192.168.4.1  node1.tedu.cn node1
192.168.4.2  node2.tedu.cn node2
192.168.4.254 host.tedu.cn host
7、安装额外软件包
 yum -y install qemu-kvm libvirt-client libvirt-daemon libvirt-daemon-driver-qemu python-setuptools
8、注意：逻辑卷不用做
9、导入签名
 rpm --import ftp://192.168.4.254/centos7-1708/RPM-GPG-KEY-CentOS-7
10、安装openstack部署工具packstack
 yum -y install openstack-packstack
11、在安装openstack过程中有大量的问题需要回答，可以提前生成应答文件
 packstack --gen-answer-file 自定义名称(.ini文件打开会有颜色)
 报错：查看dns配置
 修改应答文件
 11 CONFIG_DEFAULT_PASSWORD=Taren1  //密码
  42 CONFIG_SWIFT_INSTALL=n
  75 CONFIG_NTP_SERVERS=192.168.4.254  //时间服务器的地址
 840 CONFIG_NEUTRON_ML2_TYPE_DRIVERS=flat,vxlan   //驱动类型
 876 CONFIG_NEUTRON_ML2_VXLAN_GROUP=239.1.1.5  
//设置组播地址,最后一个随意不能为0和255,其他固定
 910 CONFIG_NEUTRON_OVS_BRIDGE_MAPPINGS=physnet1:br-ex  //物理网桥的名称
 936 CONFIG_NEUTRON_OVS_TUNNEL_IF=eth1
1179 CONFIG_PROVISION_DEMO=n   //DEMO是否测试
12、安装Openstack
 packstack --answer-file 应答文件

openstack安装遇到的问题:
1、磁盘空间不足；磁盘没有自动扩容
 LANG=en_US.UTF-8
 df -h  //查看
 /usr/bin/growpart /dev/vda 1
 /usr/sbin/xfs_growfs /
2、yum源问题，软件包不兼容，手动安装
3、网络,应答文件网桥名错
4、Cannot allocate memory，内存不足
5、ntp时间不同步，chronyc sources -v  查看可用ntp服务

配置OVS：开放的虚拟交换机
1、为br-ex网络配置IP地址，将eth0地址写到br-ex上
 vim /etc/sysconfig/network-scripts/ifcfg-br-ex
 ONBOOT=yes
 NM_CONTROLLED=no
 IPADDR=192.168.4.1
 PREXFIX=24
 GATEWAY=192.168.4.254
 DEVICE=br-ex
 NAME=br-ex
 DEVICETYPE=ovs
 OVSBOOTPROTO=static
 TYPE=OVSBridge
2、修改eth0配置文件，使之成为br-ex的一个接口
 vim /etc/sysconfig/network-scripts/ifcfg-eth0
 DEVICE=eth0
 NAME=eth0
 DEVICETYPE=ovs
 TYPE=OVSPort
 OVS_BRIDGE=br-ex
 ONBOOT=yes
 BOOTPROTO=none
3、重起服务
 systemctl restart network
不成功执行ifdown eth0;ifdown br-ex;ifup eth0;ifup br-ex

Horizon
1、web服务有一个bug，需要修改apache配置文件，否则有内部错误
 vim /etc/httpd/conf.d/15-horizon_vhost.conf
 在WSGIProcessGroup apache下加
 WSGIApplicationGroup %{GLOBAL}
 systemctl restart httpd
访问出现问题，查看/etc/hosts文件和/etc/httpd/conf.d/15-horizon_vhost.conf

访问http://192.168.4.1
账户：admin
密码：cat /root/keystonerc_admin

2、创建项目
项目：一组隔离的资源，可以为你的每个客户创建一个项目，在早期的版本里，项目project也被称作租户tenant
openstack安装好之后，默认已经创建了两个项目。一个项目名为admin，是给管理员账号admin使用的项目；还有一个名为services的项目，它服务于openstack的所有组件。
3、通过命令访问openstack，首先要初始化环境变量
 source /root/keystonerc_admin
4、项目管理相关命令
 openstack project list  //显示项目列表
 openstack project show 项目名	//显示项目详细信息
5、创建项目
 openstack project create 项目名
6、禁用项目
 openstack project set --disable 项目名
7、激活项目
 openstack project set --enable 项目名

########################################################################
Day03

用户管理
1、admin用户创建出来的普通用户，需要为其指定他能够访问的项目，这个用户成为了这个项目的管理员
角色：admin管理员、reselleradmin代理商、_member_租户

安装管理openstack服务的工具
 yum -y install openstack-utils
 openstack-status 查看openstack服务的状态，状态如果是active表示活跃，inactive表示不活跃，不活跃不一定有问题，但是fail一定是有问题
 openstack-server restart  //重起openstack所有服务

命令管理用户
openstack user create --password 密码 用户名  //创建用户及密码
openstack user set --email 用户名@xxx 用户名  //给用户添加邮箱
openstack user list	//列出所有用户
openstack user show 用户  //查看用户详细信息
openstack role add --user 用户 --project 项目 角色 //指定用户访问项目和角色
openstack role list --project 项目 --user 用户   //查看用户在项目中的角色
openstack user set --disable 用户名  //禁用此用户
openstack user set --enable 用户名  //启用此用户
openstack user set --password 新密码 用户   //修改用户密码
openstack role remove --project 项目 --user 用户 角色  //将用户从某项目中移除
openstack user delete 用户  //删除用户

配额管理
vcpu:指整个项目加起来所有的虚拟机加起来，一共可以使用多少虚拟cpu
云主机数量：项目以供可以创建多少主机
卷：一共可以创建多少块存储
内存：所有虚拟机加起来可以使用多少内存

云主机类型：就是创建的云主机资源模版
云主机类型参数
 name:云主机类型名称
 ID:云主机类型ID，系统会自动生成一个uuid
 VCPUs:虚拟CPU数目
 RAM(MB):内存大小
 Root disk(GB):外围磁盘大小。如果希望使用本地磁盘，设置为0
 临时磁盘：第二个外围磁盘
 swap磁盘：交换磁盘大小

镜像管理：指虚拟磁盘文件，已经安装了可启动的操作系统
Glance磁盘格式
 raw：非结构化磁盘镜像格式
 vhd：VMware、Xen、Microsoft、VirtualBox等均支持的通用磁盘格式
 vmdk：是Vmware的虚拟机磁盘格式
 vdi：VirtualBox虚拟机和QEMU支持磁盘格式
 iso：光盘数据内容的归档格式
 qcow2：QEMU支持的磁盘格式。空间自动扩展，并支持写是复制conpy-on-wirte
镜像容器格式
 bare：镜像中没有容器或元数据封装
 ovf：一种开源的文件规范，描述了一个开源、安全、有效、可拓展的便携式虚拟打包以及软件分布格式
 ova：OVA归档文件
 aki：亚马逊内核镜像
 ami：亚马逊主机镜像

网络管理：切换用户创建网络
Openstack网络工作原理
 实例被分配到子网中，已实现网络连通性
 每个项目可以有一个多个子网
 在红帽的Openstack平台中，Openstack网络服务是缼省的网络选项，Nova网络服务作为备用
 管理员能够配置丰富的网络，将其他Openstack服务连接到这些网络接口上
 每个项目都能拥有多个私有网络，各个项目的私有网络互相不受干扰
网络类型
 项目网络：有Neutron提供的项目内部网络，网络间可用VLAN隔离
 外部网络：可以让虚拟机接入外部网络，但需要配置浮动IP地址
 提供商网络：将实例连接到现有网络，实现虚拟机实例与外部系统共享同一二层网络

浮动IP地址
作用：
 浮动IP地址用于从外界访问虚拟机实例
 浮动IP地址只能从现有浮动IP地址池中分配
 创建外部网络时，浮动IP地址池被定义
 虚拟机实例启动后，可以为其关联一个浮动IP地址
 虚拟机实例也可以解除IP地址绑定
 解除绑定后，在绑定时，不保证绑定原来的IP地址

安全管理

实例管理










